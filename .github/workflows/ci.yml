name: "CI"

on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  commits:
    name: "Commits"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: "Check commits of the PR branch"
        run: ./.github/check_commits.sh

  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Set up Python"
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: "Install Poetry"
        uses: snok/install-poetry@5e4414407e59f94f2148bcb253917dfc22dee7d9  # v1.3.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: "Load cached venv"
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: "Install dependencies"
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: "Run linters"
        run: |
          source "$VENV"
          isort --check-only --diff . 
          black --check --diff . 
          flake8 .

      - name: "Run type-checking"
        run: |
          source "$VENV"
          mypy .
